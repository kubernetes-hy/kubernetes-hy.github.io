{"componentChunkName":"component---src-templates-course-content-template-js","path":"/part-1/3-introduction-to-networking","result":{"data":{"page":{"htmlAst":{"type":"element","tagName":"div","properties":{},"children":[{"type":"element","tagName":"text-box","properties":{"variant":"learningObjectives","name":"Learning Objectives"},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"After this section you"}]},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"are able to use Services to access applications from outside of the cluster"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"are able to use Ingresses to access applications from outside of the cluster"}]},{"type":"text","value":"\n"}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now back to development! Restarting and following logs has been a treat. Next, we'll open an endpoint to the application and access it via HTTP."}]},{"type":"element","tagName":"h4","properties":{"id":"simple-networking-application","style":"position:relative;"},"children":[{"type":"text","value":"Simple networking application"},{"type":"element","tagName":"a","properties":{"href":"#simple-networking-application","ariaLabel":"simple networking application permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's develop our application so that it has an HTTP server responding with two hashes: a hash that is stored until the process is exited and a hash that is request specific. The response body can be something like \"Application abc123. Request 94k9m2\". Choose any port to listen to."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I've prepared one "},{"type":"element","tagName":"a","properties":{"href":"https://github.com/kubernetes-hy/material-example/tree/master/app2","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"here"}]},{"type":"text","value":". By default, it will listen on port 3000."}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"console"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-console"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-console"]},"children":[{"type":"text","value":"$ kubectl apply -f https://raw.githubusercontent.com/kubernetes-hy/material-example/master/app2/manifests/deployment.yaml\n  deployment.apps/hashresponse-dep created"}]}]}]},{"type":"element","tagName":"h3","properties":{"id":"connecting-from-outside-of-the-cluster","style":"position:relative;"},"children":[{"type":"text","value":"Connecting from outside of the cluster"},{"type":"element","tagName":"a","properties":{"href":"#connecting-from-outside-of-the-cluster","ariaLabel":"connecting from outside of the cluster permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We can confirm that the hashresponse-dep is working with the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"port-forward"}]},{"type":"text","value":" command. Let's see the name of the pod first and then port forward there:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"console"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-console"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-console"]},"children":[{"type":"text","value":"$ kubectl get po\n  NAME                                READY   STATUS    RESTARTS   AGE\n  hashgenerator-dep-5cbbf97d5-z2ct9   1/1     Running   0          20h\n  hashresponse-dep-57bcc888d7-dj5vk   1/1     Running   0          19h\n\n$ kubectl port-forward hashresponse-dep-57bcc888d7-dj5vk 3003:3000\n  Forwarding from 127.0.0.1:3003 -> 3000\n  Forwarding from [::1]:3003 -> 3000"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now we can view the response from "},{"type":"element","tagName":"a","properties":{"href":"http://localhost:3003","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"http://localhost:3003"}]},{"type":"text","value":" and confirm that it is working as expected."}]},{"type":"element","tagName":"exercise","properties":{"name":"Exercise 1.05: Project v0.3"},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  Have the project respond something to a GET request sent to the project. A simple html page is good or you can deploy something more complex like a single-page-application."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  See "},{"type":"element","tagName":"a","properties":{"href":"https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"here"}]},{"type":"text","value":" how you can define environment variables for containers."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  Use "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"kubectl port-forward"}]},{"type":"text","value":" to confirm that the project is accessible and works in the cluster by using a browser to access the project."}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"External connections with Docker used the flag -p "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"-p 3003:3000"}]},{"type":"text","value":" or in Docker compose ports the declaration. Unfortunately, Kubernetes isn't as simple. We're going to use either a "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Service"}]},{"type":"text","value":" resource or an "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Ingress"}]},{"type":"text","value":" resource."}]},{"type":"element","tagName":"h4","properties":{"id":"before-anything-else","style":"position:relative;"},"children":[{"type":"text","value":"Before anything else"},{"type":"element","tagName":"a","properties":{"href":"#before-anything-else","ariaLabel":"before anything else permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Because we are running our cluster inside Docker with k3d we will have to do some preparations."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Opening a route from outside of the cluster to the pod will not be enough if we have no means of accessing the cluster inside the containers!"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"console"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-console"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-console"]},"children":[{"type":"text","value":"$ docker ps\n  CONTAINER ID    IMAGE                      COMMAND                  CREATED             STATUS              PORTS                             NAMES\n  b60f6c246ebb    ghcr.io/k3d-io/k3d-proxy:5 \"/bin/sh -c nginx-prâ€¦\"   2 hours ago         Up 2 hours          80/tcp, 0.0.0.0:58264->6443/tcp   k3d-k3s-default-serverlb\n  553041f96fc6    rancher/k3s:latest         \"/bin/k3s agent\"         2 hours ago         Up 2 hours                                            k3d-k3s-default-agent-1\n  aebd23c2ef99    rancher/k3s:latest         \"/bin/k3s agent\"         2 hours ago         Up 2 hours                                            k3d-k3s-default-agent-0\n  a34e49184d37    rancher/k3s:latest         \"/bin/k3s server --tâ€¦\"   2 hours ago         Up 2 hours                                            k3d-k3s-default-server-0"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"After scrolling a bit right we see that K3d has helpfully prepared us the port 6443 to access the API. Also the port 80 is open. All requests to the load balancer here will be proxied to the same ports of all server nodes of the cluster. However, for testing purposes, we'll want "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"an individual port open for a single node"}]},{"type":"text","value":". Let's delete our old cluster and create a new one with some ports open."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"K3d "},{"type":"element","tagName":"a","properties":{"href":"https://k3d.io/v5.3.0/usage/commands/k3d_cluster_create/","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"documentation"}]},{"type":"text","value":" tells us how the ports are opened, we'll open local 8081 to 80 in k3d-k3s-default-serverlb and local 8082 to 30080 in k3d-k3s-default-agent-0. The 30080 is chosen almost completely randomly, but needs to be a value between 30000-32767 for the next step:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"console"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-console"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-console"]},"children":[{"type":"text","value":"$ k3d cluster delete\n  INFO[0000] Deleting cluster 'k3s-default'\n  ...\n  INFO[0002] Successfully deleted cluster k3s-default!\n\n$ k3d cluster create --port 8082:30080@agent:0 -p 8081:80@loadbalancer --agents 2\n  INFO[0000] Created network 'k3d-k3s-default'\n  ...\n  INFO[0021] Cluster 'k3s-default' created successfully!\n  INFO[0021] You can now use it like this:\n  kubectl cluster-info\n\n$ kubectl apply -f https://raw.githubusercontent.com/kubernetes-hy/material-example/master/app2/manifests/deployment.yaml\n  deployment.apps/hashresponse-dep created"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Above the \"agent:0\" and \"loadbalancer\" are based on k3d "},{"type":"element","tagName":"a","properties":{"href":"https://github.com/rancher/k3d/blob/main/docs/usage/exposing_services.md","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"documentation"}]},{"type":"text","value":" and reading code from "},{"type":"element","tagName":"a","properties":{"href":"https://github.com/rancher/k3d/blob/11cc7979228f304025d61254eb0c0cb2745b9444/cmd/util/filter.go#L119","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"here"}]},{"type":"text","value":" and "},{"type":"element","tagName":"a","properties":{"href":"https://github.com/rancher/k3d/blob/main/pkg/types/types.go#L65","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"here"}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now we have access through port 8081 to our server node (actually all nodes) and 8082 to one of our agent nodes port 30080. They will be used to showcase different methods of communicating with the servers."}]},{"type":"element","tagName":"text-box","properties":{"name":"Limitations of local environment","variant":"hint"},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The setup isn't perfect, we will have a limited amount of ports available in the future. This will be sufficient for our use cases."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Your OS may support using the host network so no ports need to be opened. However, I have no experience with this."}]}]},{"type":"element","tagName":"h4","properties":{"id":"what-is-a-service","style":"position:relative;"},"children":[{"type":"text","value":"What is a Service?"},{"type":"element","tagName":"a","properties":{"href":"#what-is-a-service","ariaLabel":"what is a service permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Deployment"}]},{"type":"text","value":" resources took care of deployments for us. "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Service"}]},{"type":"text","value":" resources will take care of serving the application to connections from outside (and also inside!) of the cluster."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Create a file service.yaml into the manifests folder and we need the service to do the following things:"}]},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Declare that we want a Service"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Declare which port to listen to"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Declare the application where the request should be directed to"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Declare the port where the request should be directed to"}]},{"type":"text","value":"\n"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This translates into a yaml file with contents"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"service.yaml"}]}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"yaml"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-yaml"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-yaml"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"apiVersion"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" v1\n"},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"kind"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" Service\n"},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"metadata"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"name"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" hashresponse"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":"svc\n"},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"spec"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"type"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" NodePort\n  "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"selector"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"app"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" hashresponse "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# This is the app as declared in the deployment."}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"ports"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"name"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" http\n      "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"nodePort"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"30080"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# This is the port that is available outside. Value for nodePort can be between 30000-32767"}]},{"type":"text","value":"\n      "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"protocol"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" TCP\n      "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"port"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"1234"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# This is a port that is available to the cluster, in this case it can be ~ anything"}]},{"type":"text","value":"\n      "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"targetPort"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"3000"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# This is the target port"}]}]}]}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"console"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-console"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-console"]},"children":[{"type":"text","value":"$ kubectl apply -f manifests/service.yaml\n  service/hashresponse-svc created"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As we've published 8082 as 30080 we can access it now via "},{"type":"element","tagName":"a","properties":{"href":"http://localhost:8082","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"http://localhost:8082"}]},{"type":"text","value":"."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We've now defined a nodeport with "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"type: NodePort"}]},{"type":"text","value":". "},{"type":"element","tagName":"a","properties":{"href":"https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"NodePorts"}]},{"type":"text","value":" are simply ports that are opened by Kubernetes to "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"all of the nodes"}]},{"type":"text","value":" and the service will handle requests in that port. NodePorts are not flexible and require you to assign a different port for every application. As such NodePorts are not used in production but are helpful to know about."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"What we'd want to use instead of NodePort would be a "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"LoadBalancer"}]},{"type":"text","value":" type service but this \"only\" works with cloud providers as it configures a, possibly costly, load balancer for it. We'll get to know them in part 3."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There's one additional resource that will help us with serving the application, "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Ingress"}]},{"type":"text","value":"."}]},{"type":"element","tagName":"exercise","properties":{"name":"Exercise 1.06: Project v0.4"},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  Use a NodePort Service to enable access to the project."}]}]},{"type":"element","tagName":"h4","properties":{"id":"what-is-an-ingress","style":"position:relative;"},"children":[{"type":"text","value":"What is an Ingress?"},{"type":"element","tagName":"a","properties":{"href":"#what-is-an-ingress","ariaLabel":"what is an ingress permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Incoming Network Access resource "},{"type":"element","tagName":"a","properties":{"href":"https://kubernetes.io/docs/concepts/services-networking/ingress/","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"Ingress"}]},{"type":"text","value":" is a completely different type of resource from "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Services"}]},{"type":"text","value":". If you've got your "},{"type":"element","tagName":"a","properties":{"href":"https://en.wikipedia.org/wiki/OSI_model","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"OSI model"}]},{"type":"text","value":" memorized, it works in layer 7 while services work on layer 4. You could see these used together: first the aforementioned "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"LoadBalancer"}]},{"type":"text","value":" and then Ingress to handle routing. In our case, as we don't have a load balancer available we can use the Ingress as the first stop. If you're familiar with reverse proxies like Nginx, Ingress should seem familiar."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Ingresses are implemented by various different \"controllers\". This means that ingresses do not automatically work in a cluster, but give you the freedom of choosing which ingress controller works for you the best. K3s has "},{"type":"element","tagName":"a","properties":{"href":"https://containo.us/traefik/","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"Traefik"}]},{"type":"text","value":" installed already. Other options include Istio and Nginx Ingress Controller, "},{"type":"element","tagName":"a","properties":{"href":"https://kubernetes.io/docs/concepts/services-networking/ingress-controllers/","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"more here"}]},{"type":"text","value":"."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Switching to Ingress will require us to create an Ingress resource. Ingress will route incoming traffic forward to a "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Services"}]},{"type":"text","value":", but the old "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"NodePort"}]},{"type":"text","value":" Service won't do."}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"console"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-console"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-console"]},"children":[{"type":"text","value":"$ kubectl delete -f manifests/service.yaml\n  service \"hashresponse-svc\" deleted"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A "},{"type":"element","tagName":"a","properties":{"href":"https://kubernetes.io/docs/concepts/services-networking/service/#type-clusterip","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"ClusterIP"}]},{"type":"text","value":" type Service resource gives the Service an internal IP that'll be accessible within the cluster."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The following will let TCP traffic from port 2345 to port 3000."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"service.yaml"}]}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"yaml"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-yaml"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-yaml"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"apiVersion"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" v1\n"},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"kind"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" Service\n"},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"metadata"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"name"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" hashresponse"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":"svc\n"},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"spec"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"type"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" ClusterIP\n  "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"selector"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"app"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" hashresponse\n  "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"ports"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"port"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"2345"}]},{"type":"text","value":"\n      "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"protocol"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" TCP\n      "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"targetPort"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"3000"}]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The second resource we need is the new "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Ingress"}]},{"type":"text","value":"."}]},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Declare that it should be an Ingress"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"And route all traffic to our service"}]},{"type":"text","value":"\n"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"ingress.yaml"}]}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"yaml"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-yaml"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-yaml"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"apiVersion"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" networking.k8s.io/v1\n"},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"kind"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" Ingress\n"},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"metadata"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"name"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" dwk"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":"material"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":"ingress\n"},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"spec"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"rules"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"http"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n      "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"paths"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n      "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"path"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" /\n        "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"pathType"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" Prefix\n        "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"backend"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n          "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"service"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n            "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"name"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" hashresponse"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":"svc\n            "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"port"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n              "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"number"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"2345"}]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Then we can apply everything and view the result"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"console"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-console"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-console"]},"children":[{"type":"text","value":"$ kubectl apply -f manifests/\n  ingress.networking.k8s.io/dwk-material-ingress created\n  service/hashresponse-svc configured\n\n$ kubectl get svc,ing\n  NAME                       TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)    AGE\n  service/kubernetes         ClusterIP   10.43.0.1    <none>        443/TCP    5m22s\n  service/hashresponse-svc   ClusterIP   10.43.0.61   <none>        2345/TCP   45s\n\n  NAME                                             CLASS    HOSTS   ADDRESS                            PORTS   AGE\n  ingress.networking.k8s.io/dwk-material-ingress   <none>   *       172.21.0.3,172.21.0.4,172.21.0.5   80      16s"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We can see that the ingress is listening on port 80. As we already opened port there we can access the application on "},{"type":"element","tagName":"a","properties":{"href":"http://localhost:8081","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"http://localhost:8081"}]},{"type":"text","value":"."}]},{"type":"element","tagName":"exercise","properties":{"name":"Exercise 1.07: External access with Ingress"},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  \"Log output\" application currently outputs a timestamp and a random string to the logs."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  Add an endpoint to request the current status (timestamp and string) and an ingress so that you can access it with a browser."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  You can just store the string and timestamp to the memory."}]}]},{"type":"element","tagName":"exercise","properties":{"name":"Exercise 1.08: Project v0.5"},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  Switch to using Ingress instead of NodePort to access the project. You can delete the ingress of the \"Log output\" application so they don't interfere with this exercise. We'll look more into paths and routing in the next exercise and at that point you can configure project to run with the \"Log output\" application side by side."}]}]},{"type":"element","tagName":"exercise","properties":{"name":"Exercise 1.09: More services"},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  Develop a second application that simply responds with \"pong 0\" to a GET request and increases a counter (the 0) so that you can see how many requests have been sent. The counter should be in memory so it may reset at some point.\nCreate a new deployment for it and have it share ingress with \"Log output\" application. Route requests directed '/pingpong' to it."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  In future exercises, this second application will be referred to as \"ping-pong application\". It will be used with \"Log output\" application."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  The ping-pong application will need to listen requests on '/pingpong', so you may have to make changes to its code. This can be avoided by configuring the ingress to rewrite the path, but we will leave that as an optional exercise. You can check out "},{"type":"element","tagName":"a","properties":{"href":"https://kubernetes.io/docs/concepts/services-networking/ingress/#the-ingress-resource","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"https://kubernetes.io/docs/concepts/services-networking/ingress/#the-ingress-resource"}]}]}]}]},"html":"<div><text-box variant='learningObjectives' name='Learning Objectives'><p>After this section you</p><ul>\n<li>are able to use Services to access applications from outside of the cluster</li>\n<li>are able to use Ingresses to access applications from outside of the cluster</li>\n</ul></text-box><p>Now back to development! Restarting and following logs has been a treat. Next, we'll open an endpoint to the application and access it via HTTP.</p><h4 id=\"simple-networking-application\" style=\"position:relative;\">Simple networking application<a href=\"#simple-networking-application\" aria-label=\"simple networking application permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4><p>Let's develop our application so that it has an HTTP server responding with two hashes: a hash that is stored until the process is exited and a hash that is request specific. The response body can be something like \"Application abc123. Request 94k9m2\". Choose any port to listen to.</p><p>I've prepared one <a href=\"https://github.com/kubernetes-hy/material-example/tree/master/app2\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>. By default, it will listen on port 3000.</p><div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ kubectl apply -f https://raw.githubusercontent.com/kubernetes-hy/material-example/master/app2/manifests/deployment.yaml\n  deployment.apps/hashresponse-dep created</code></pre></div><h3 id=\"connecting-from-outside-of-the-cluster\" style=\"position:relative;\">Connecting from outside of the cluster<a href=\"#connecting-from-outside-of-the-cluster\" aria-label=\"connecting from outside of the cluster permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3><p>We can confirm that the hashresponse-dep is working with the <code class=\"language-text\">port-forward</code> command. Let's see the name of the pod first and then port forward there:</p><div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ kubectl get po\n  NAME                                READY   STATUS    RESTARTS   AGE\n  hashgenerator-dep-5cbbf97d5-z2ct9   1/1     Running   0          20h\n  hashresponse-dep-57bcc888d7-dj5vk   1/1     Running   0          19h\n\n$ kubectl port-forward hashresponse-dep-57bcc888d7-dj5vk 3003:3000\n  Forwarding from 127.0.0.1:3003 -&gt; 3000\n  Forwarding from [::1]:3003 -&gt; 3000</code></pre></div><p>Now we can view the response from <a href=\"http://localhost:3003\" target=\"_blank\" rel=\"noopener noreferrer\">http://localhost:3003</a> and confirm that it is working as expected.</p><exercise name='Exercise 1.05: Project v0.3'><p>  Have the project respond something to a GET request sent to the project. A simple html page is good or you can deploy something more complex like a single-page-application.</p><p>  See <a href=\"https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/\" target=\"_blank\" rel=\"noopener noreferrer\">here</a> how you can define environment variables for containers.</p><p>  Use <code class=\"language-text\">kubectl port-forward</code> to confirm that the project is accessible and works in the cluster by using a browser to access the project.</p></exercise><p>External connections with Docker used the flag -p <code class=\"language-text\">-p 3003:3000</code> or in Docker compose ports the declaration. Unfortunately, Kubernetes isn't as simple. We're going to use either a <em>Service</em> resource or an <em>Ingress</em> resource.</p><h4 id=\"before-anything-else\" style=\"position:relative;\">Before anything else<a href=\"#before-anything-else\" aria-label=\"before anything else permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4><p>Because we are running our cluster inside Docker with k3d we will have to do some preparations.</p><p>Opening a route from outside of the cluster to the pod will not be enough if we have no means of accessing the cluster inside the containers!</p><div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ docker ps\n  CONTAINER ID    IMAGE                      COMMAND                  CREATED             STATUS              PORTS                             NAMES\n  b60f6c246ebb    ghcr.io/k3d-io/k3d-proxy:5 &quot;/bin/sh -c nginx-prâ€¦&quot;   2 hours ago         Up 2 hours          80/tcp, 0.0.0.0:58264-&gt;6443/tcp   k3d-k3s-default-serverlb\n  553041f96fc6    rancher/k3s:latest         &quot;/bin/k3s agent&quot;         2 hours ago         Up 2 hours                                            k3d-k3s-default-agent-1\n  aebd23c2ef99    rancher/k3s:latest         &quot;/bin/k3s agent&quot;         2 hours ago         Up 2 hours                                            k3d-k3s-default-agent-0\n  a34e49184d37    rancher/k3s:latest         &quot;/bin/k3s server --tâ€¦&quot;   2 hours ago         Up 2 hours                                            k3d-k3s-default-server-0</code></pre></div><p>After scrolling a bit right we see that K3d has helpfully prepared us the port 6443 to access the API. Also the port 80 is open. All requests to the load balancer here will be proxied to the same ports of all server nodes of the cluster. However, for testing purposes, we'll want <em>an individual port open for a single node</em>. Let's delete our old cluster and create a new one with some ports open.</p><p>K3d <a href=\"https://k3d.io/v5.3.0/usage/commands/k3d_cluster_create/\" target=\"_blank\" rel=\"noopener noreferrer\">documentation</a> tells us how the ports are opened, we'll open local 8081 to 80 in k3d-k3s-default-serverlb and local 8082 to 30080 in k3d-k3s-default-agent-0. The 30080 is chosen almost completely randomly, but needs to be a value between 30000-32767 for the next step:</p><div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ k3d cluster delete\n  INFO[0000] Deleting cluster &#39;k3s-default&#39;\n  ...\n  INFO[0002] Successfully deleted cluster k3s-default!\n\n$ k3d cluster create --port 8082:30080@agent:0 -p 8081:80@loadbalancer --agents 2\n  INFO[0000] Created network &#39;k3d-k3s-default&#39;\n  ...\n  INFO[0021] Cluster &#39;k3s-default&#39; created successfully!\n  INFO[0021] You can now use it like this:\n  kubectl cluster-info\n\n$ kubectl apply -f https://raw.githubusercontent.com/kubernetes-hy/material-example/master/app2/manifests/deployment.yaml\n  deployment.apps/hashresponse-dep created</code></pre></div><p>Above the \"agent:0\" and \"loadbalancer\" are based on k3d <a href=\"https://github.com/rancher/k3d/blob/main/docs/usage/exposing_services.md\" target=\"_blank\" rel=\"noopener noreferrer\">documentation</a> and reading code from <a href=\"https://github.com/rancher/k3d/blob/11cc7979228f304025d61254eb0c0cb2745b9444/cmd/util/filter.go#L119\" target=\"_blank\" rel=\"noopener noreferrer\">here</a> and <a href=\"https://github.com/rancher/k3d/blob/main/pkg/types/types.go#L65\" target=\"_blank\" rel=\"noopener noreferrer\">here</a></p><p>Now we have access through port 8081 to our server node (actually all nodes) and 8082 to one of our agent nodes port 30080. They will be used to showcase different methods of communicating with the servers.</p><text-box name=\"Limitations of local environment\" variant=\"hint\"><p>The setup isn't perfect, we will have a limited amount of ports available in the future. This will be sufficient for our use cases.</p><p>Your OS may support using the host network so no ports need to be opened. However, I have no experience with this.</p></text-box><h4 id=\"what-is-a-service\" style=\"position:relative;\">What is a Service?<a href=\"#what-is-a-service\" aria-label=\"what is a service permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4><p>As <em>Deployment</em> resources took care of deployments for us. <em>Service</em> resources will take care of serving the application to connections from outside (and also inside!) of the cluster.</p><p>Create a file service.yaml into the manifests folder and we need the service to do the following things:</p><ol>\n<li>Declare that we want a Service</li>\n<li>Declare which port to listen to</li>\n<li>Declare the application where the request should be directed to</li>\n<li>Declare the port where the request should be directed to</li>\n</ol><p>This translates into a yaml file with contents</p><p><strong>service.yaml</strong></p><div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> hashresponse<span class=\"token punctuation\">-</span>svc\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> NodePort\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> hashresponse <span class=\"token comment\"># This is the app as declared in the deployment.</span>\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> http\n      <span class=\"token key atrule\">nodePort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">30080</span> <span class=\"token comment\"># This is the port that is available outside. Value for nodePort can be between 30000-32767</span>\n      <span class=\"token key atrule\">protocol</span><span class=\"token punctuation\">:</span> TCP\n      <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1234</span> <span class=\"token comment\"># This is a port that is available to the cluster, in this case it can be ~ anything</span>\n      <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3000</span> <span class=\"token comment\"># This is the target port</span></code></pre></div><div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ kubectl apply -f manifests/service.yaml\n  service/hashresponse-svc created</code></pre></div><p>As we've published 8082 as 30080 we can access it now via <a href=\"http://localhost:8082\" target=\"_blank\" rel=\"noopener noreferrer\">http://localhost:8082</a>.</p><p>We've now defined a nodeport with <code class=\"language-text\">type: NodePort</code>. <a href=\"https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport\" target=\"_blank\" rel=\"noopener noreferrer\">NodePorts</a> are simply ports that are opened by Kubernetes to <strong>all of the nodes</strong> and the service will handle requests in that port. NodePorts are not flexible and require you to assign a different port for every application. As such NodePorts are not used in production but are helpful to know about.</p><p>What we'd want to use instead of NodePort would be a <em>LoadBalancer</em> type service but this \"only\" works with cloud providers as it configures a, possibly costly, load balancer for it. We'll get to know them in part 3.</p><p>There's one additional resource that will help us with serving the application, <em>Ingress</em>.</p><exercise name='Exercise 1.06: Project v0.4'><p>  Use a NodePort Service to enable access to the project.</p></exercise><h4 id=\"what-is-an-ingress\" style=\"position:relative;\">What is an Ingress?<a href=\"#what-is-an-ingress\" aria-label=\"what is an ingress permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4><p>Incoming Network Access resource <a href=\"https://kubernetes.io/docs/concepts/services-networking/ingress/\" target=\"_blank\" rel=\"noopener noreferrer\">Ingress</a> is a completely different type of resource from <em>Services</em>. If you've got your <a href=\"https://en.wikipedia.org/wiki/OSI_model\" target=\"_blank\" rel=\"noopener noreferrer\">OSI model</a> memorized, it works in layer 7 while services work on layer 4. You could see these used together: first the aforementioned <em>LoadBalancer</em> and then Ingress to handle routing. In our case, as we don't have a load balancer available we can use the Ingress as the first stop. If you're familiar with reverse proxies like Nginx, Ingress should seem familiar.</p><p>Ingresses are implemented by various different \"controllers\". This means that ingresses do not automatically work in a cluster, but give you the freedom of choosing which ingress controller works for you the best. K3s has <a href=\"https://containo.us/traefik/\" target=\"_blank\" rel=\"noopener noreferrer\">Traefik</a> installed already. Other options include Istio and Nginx Ingress Controller, <a href=\"https://kubernetes.io/docs/concepts/services-networking/ingress-controllers/\" target=\"_blank\" rel=\"noopener noreferrer\">more here</a>.</p><p>Switching to Ingress will require us to create an Ingress resource. Ingress will route incoming traffic forward to a <em>Services</em>, but the old <em>NodePort</em> Service won't do.</p><div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ kubectl delete -f manifests/service.yaml\n  service &quot;hashresponse-svc&quot; deleted</code></pre></div><p>A <a href=\"https://kubernetes.io/docs/concepts/services-networking/service/#type-clusterip\" target=\"_blank\" rel=\"noopener noreferrer\">ClusterIP</a> type Service resource gives the Service an internal IP that'll be accessible within the cluster.</p><p>The following will let TCP traffic from port 2345 to port 3000.</p><p><strong>service.yaml</strong></p><div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> hashresponse<span class=\"token punctuation\">-</span>svc\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> ClusterIP\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> hashresponse\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2345</span>\n      <span class=\"token key atrule\">protocol</span><span class=\"token punctuation\">:</span> TCP\n      <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3000</span></code></pre></div><p>The second resource we need is the new <em>Ingress</em>.</p><ol>\n<li>Declare that it should be an Ingress</li>\n<li>And route all traffic to our service</li>\n</ol><p><strong>ingress.yaml</strong></p><div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> networking.k8s.io/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Ingress\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> dwk<span class=\"token punctuation\">-</span>material<span class=\"token punctuation\">-</span>ingress\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">rules</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">http</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">paths</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /\n        <span class=\"token key atrule\">pathType</span><span class=\"token punctuation\">:</span> Prefix\n        <span class=\"token key atrule\">backend</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">service</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> hashresponse<span class=\"token punctuation\">-</span>svc\n            <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">number</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2345</span></code></pre></div><p>Then we can apply everything and view the result</p><div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ kubectl apply -f manifests/\n  ingress.networking.k8s.io/dwk-material-ingress created\n  service/hashresponse-svc configured\n\n$ kubectl get svc,ing\n  NAME                       TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)    AGE\n  service/kubernetes         ClusterIP   10.43.0.1    &lt;none&gt;        443/TCP    5m22s\n  service/hashresponse-svc   ClusterIP   10.43.0.61   &lt;none&gt;        2345/TCP   45s\n\n  NAME                                             CLASS    HOSTS   ADDRESS                            PORTS   AGE\n  ingress.networking.k8s.io/dwk-material-ingress   &lt;none&gt;   *       172.21.0.3,172.21.0.4,172.21.0.5   80      16s</code></pre></div><p>We can see that the ingress is listening on port 80. As we already opened port there we can access the application on <a href=\"http://localhost:8081\" target=\"_blank\" rel=\"noopener noreferrer\">http://localhost:8081</a>.</p><exercise name='Exercise 1.07: External access with Ingress'><p>  \"Log output\" application currently outputs a timestamp and a random string to the logs.</p><p>  Add an endpoint to request the current status (timestamp and string) and an ingress so that you can access it with a browser.</p><p>  You can just store the string and timestamp to the memory.</p></exercise><exercise name='Exercise 1.08: Project v0.5'><p>  Switch to using Ingress instead of NodePort to access the project. You can delete the ingress of the \"Log output\" application so they don't interfere with this exercise. We'll look more into paths and routing in the next exercise and at that point you can configure project to run with the \"Log output\" application side by side.</p></exercise><exercise name='Exercise 1.09: More services'><p>  Develop a second application that simply responds with \"pong 0\" to a GET request and increases a counter (the 0) so that you can see how many requests have been sent. The counter should be in memory so it may reset at some point.\nCreate a new deployment for it and have it share ingress with \"Log output\" application. Route requests directed '/pingpong' to it.</p><p>  In future exercises, this second application will be referred to as \"ping-pong application\". It will be used with \"Log output\" application.</p><p>  The ping-pong application will need to listen requests on '/pingpong', so you may have to make changes to its code. This can be avoided by configuring the ingress to rewrite the path, but we will leave that as an optional exercise. You can check out <a href=\"https://kubernetes.io/docs/concepts/services-networking/ingress/#the-ingress-resource\" target=\"_blank\" rel=\"noopener noreferrer\">https://kubernetes.io/docs/concepts/services-networking/ingress/#the-ingress-resource</a></p></exercise></div>","frontmatter":{"path":"/part-1/3-introduction-to-networking","title":"Introduction to Networking"},"fileAbsolutePath":"/home/runner/work/kubernetes-hy.github.io/kubernetes-hy.github.io/data/part-1/3-introduction-to-networking.md"},"allPages":{"edges":[{"node":{"id":"e4e5fe1c-25b1-57b3-87eb-e204e767a49c","frontmatter":{"path":"/faq","title":"FAQ"}}},{"node":{"id":"9f6e26aa-46a9-523d-96e4-a57c65ec083d","frontmatter":{"path":"/frontmatter-guide","title":"Frontmatter-guide"}}},{"node":{"id":"ecaa7011-87db-5ece-9b3c-1cfad638324a","frontmatter":{"path":"/","title":"Homepage"}}},{"node":{"id":"57c61ed7-37c4-5d0f-acd8-1dca0de6be4a","frontmatter":{"path":"/registration-and-completion","title":"Registration and Completion"}}},{"node":{"id":"fb4fb717-329a-5d49-94c3-183aa16507e2","frontmatter":{"path":"/unity-assignment","title":"Unity Assignment"}}},{"node":{"id":"dab4b6a7-96cf-5efe-83f4-f5199c283e65","frontmatter":{"path":"/part-0","title":"Part 0"}}},{"node":{"id":"8ecc11b1-3298-589e-b97a-2a3a36861b8d","frontmatter":{"path":"/sanasto","title":"Sanasto"}}},{"node":{"id":"3d7eac33-2990-59d1-a002-64e0b0f4f370","frontmatter":{"path":"/known-problems-solutions","title":"Issues you may face"}}},{"node":{"id":"78948204-39a7-5f81-b9f4-3029400d5f82","frontmatter":{"path":"/part-1/2-introduction-to-debugging","title":"Introduction to Debugging"}}},{"node":{"id":"0b237cfb-5f2a-5d8e-9aa0-0cf9b045db3a","frontmatter":{"path":"/part-1/5-summary","title":"Summary"}}},{"node":{"id":"19841be9-897c-577a-9f82-5a7381bc073c","frontmatter":{"path":"/part-2/1-networking-between-pods","title":"Networking between pods"}}},{"node":{"id":"fe4a80ee-85ba-536e-bbf5-c5695399f40f","frontmatter":{"path":"/part-1","title":"Part 1"}}},{"node":{"id":"f802a4ea-8d5a-503f-ad7b-d0138ab84c80","frontmatter":{"path":"/part-2/6-summary","title":"Summary"}}},{"node":{"id":"56f2a7a2-c9e2-5bbb-b6a7-76fd46592c69","frontmatter":{"path":"/part-2/5-monitoring","title":"Monitoring"}}},{"node":{"id":"b810e0d9-0ac2-5073-a9dc-4ffd6649b7f7","frontmatter":{"path":"/part-2","title":"Part 2"}}},{"node":{"id":"40440141-c1a8-5723-858a-eea86119b5b6","frontmatter":{"path":"/part-3/4-summary","title":"Summary"}}},{"node":{"id":"708df9d2-30d1-518f-8066-80109a75c4dc","frontmatter":{"path":"/part-3","title":"Part 3"}}},{"node":{"id":"47a288aa-ece4-5ba6-ab6e-cbc63dbdc752","frontmatter":{"path":"/part-4/4-summary","title":"Summary"}}},{"node":{"id":"c8b1eb5e-3c98-59b3-b6e9-6173791d7e34","frontmatter":{"path":"/part-4","title":"Part 4"}}},{"node":{"id":"471982cb-da12-5799-a6b2-fa8a3e67aa0d","frontmatter":{"path":"/part-5/4-beyond-kubernetes","title":"Beyond Kubernetes"}}},{"node":{"id":"7bebb01b-c990-5e7e-a9aa-d60f10ba63dd","frontmatter":{"path":"/part-5/5-summary","title":"Summary and end"}}},{"node":{"id":"cbd58376-8d52-5297-b38d-653179a1226f","frontmatter":{"path":"/part-5","title":"Part 5"}}},{"node":{"id":"fd6ebeaa-c808-5f11-9bdc-30e4f69b8a2a","frontmatter":{"path":"/part-1/4-introduction-to-storage","title":"Introduction to Storage"}}},{"node":{"id":"e4c53dca-867f-5293-9b28-657b695cd3f3","frontmatter":{"path":"/part-1/3-introduction-to-networking","title":"Introduction to Networking"}}},{"node":{"id":"9e4ff8d0-2e6c-5d55-83a0-16ada460096d","frontmatter":{"path":"/part-2/2-organizing-a-cluster","title":"Organizing a cluster"}}},{"node":{"id":"0353d158-f751-57fd-94ce-373924da1b05","frontmatter":{"path":"/part-2/3-configuring-applications","title":"Configuring applications"}}},{"node":{"id":"eae6660d-1d18-527a-bc1c-0f2f7ab54c6d","frontmatter":{"path":"/part-2/4-statefulsets-and-jobs","title":"StatefulSets and Jobs"}}},{"node":{"id":"e80b74e8-a23b-5d3c-808b-833a72ac739c","frontmatter":{"path":"/part-3/2-deployment-pipeline","title":"Deployment Pipeline"}}},{"node":{"id":"9f3c6f02-668a-517b-b7b6-1828f74c7200","frontmatter":{"path":"/part-3/1-introduction-to-gke","title":"Introduction to Google Kubernetes Engine"}}},{"node":{"id":"78f84327-bd7b-5b5d-941d-9fae8bca88d3","frontmatter":{"path":"/part-3/3-gke-features","title":"GKE features"}}},{"node":{"id":"0a2d8cfd-8e40-59a7-a688-e8bdc9fb9e3a","frontmatter":{"path":"/part-4/3-gitops","title":"GitOps"}}},{"node":{"id":"39fb03b7-2abe-515a-a543-b812fcbfdba5","frontmatter":{"path":"/part-5/1-kubernetes-internals","title":"Kubernetes Internals"}}},{"node":{"id":"8a2e40fa-1703-5755-aa66-ac69bf2e291d","frontmatter":{"path":"/part-5/3-service-mesh","title":"Service Mesh"}}},{"node":{"id":"a899eeb2-4329-5c9b-aadf-2fb803fa9142","frontmatter":{"path":"/part-5/2-custom-resource-definitions","title":"Custom Resource Definitions"}}},{"node":{"id":"da15a80e-5316-5986-afcf-75d521065017","frontmatter":{"path":"/part-1/1-first-deploy","title":"First Deploy"}}},{"node":{"id":"f5314214-d779-5fb4-a19f-ab7442f3fbb2","frontmatter":{"path":"/part-4/2-messaging-systems","title":"Messaging Systems"}}},{"node":{"id":"33c86b5c-3684-5006-b4e7-dbd0c7cc04bc","frontmatter":{"path":"/part-4/1-update-strategies-and-prometheus","title":"Update Strategies and Prometheus"}}}]}},"pageContext":{}},"staticQueryHashes":["3294351120","994120085"]}