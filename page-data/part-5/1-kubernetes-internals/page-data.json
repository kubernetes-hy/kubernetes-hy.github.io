{"componentChunkName":"component---src-templates-course-content-template-js","path":"/part-5/1-kubernetes-internals","result":{"data":{"page":{"htmlAst":{"type":"element","tagName":"div","properties":{},"children":[{"type":"element","tagName":"text-box","properties":{"variant":"learningObjectives","name":"Learning Objectives"},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"After this section you"}]},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"can explain in broad terms how Kubernetes operates"}]},{"type":"text","value":"\n"}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Instead of thinking about Kubernetes as something completely new I've found that comparing it to an operating system helps. I'm not an expert in operating systems but we've all used them."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Kubernetes is a layer on top of which we run our applications. It takes the resources that are accessible from the layers below and manages our applications and resources. It also provides services, such as the DNS, for the applications. With this OS mindset, we can also try to go the other way: You may have used a "},{"type":"element","tagName":"a","properties":{"href":"https://en.wikipedia.org/wiki/Cron","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"cron"}]},{"type":"text","value":" (or Windows' "},{"type":"element","tagName":"a","properties":{"href":"https://en.wikipedia.org/wiki/Windows_Task_Scheduler","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"task scheduler"}]},{"type":"text","value":") for scheduling batch jobs such as saving backups of some applications. The same thing in Kubernetes can be done with "},{"type":"element","tagName":"a","properties":{"href":"https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"CronJobs"}]},{"type":"text","value":"."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now that we'll start talking about the internals we'll learn new insight on Kubernetes and will be able to prevent and solve problems that may result from its nature."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Since this section is mostly a reiteration of Kubernetes documentation, I will include various links to the official version of the documentation. Despite talking about internals, we shall not discuss how to set up our own Kubernetes cluster manually. If you want to get your hands dirty with a setup, you should read and complete "},{"type":"element","tagName":"a","properties":{"href":"https://github.com/kelseyhightower/kubernetes-the-hard-way","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"Kubernetes the Hard Way"}]},{"type":"text","value":" by Kelsey Hightower."}]},{"type":"element","tagName":"h3","properties":{"id":"controllers","style":"position:relative;"},"children":[{"type":"text","value":"Controllers"},{"type":"element","tagName":"a","properties":{"href":"#controllers","ariaLabel":"controllers permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://kubernetes.io/docs/concepts/architecture/controller/","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"Controllers"}]},{"type":"text","value":" watch the state of your cluster and then try to move the current state of the cluster closer to the desired state. When you declare X replicas of a Pod in your deployment.yaml, a controller called "},{"type":"element","tagName":"a","properties":{"href":"https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"Replication Controller"}]},{"type":"text","value":" makes sure that will be true. There are a number of controllers for different responsibilities."}]},{"type":"element","tagName":"h3","properties":{"id":"kubernetes-control-plane","style":"position:relative;"},"children":[{"type":"text","value":"Kubernetes Control Plane"},{"type":"element","tagName":"a","properties":{"href":"#kubernetes-control-plane","ariaLabel":"kubernetes control plane permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://kubernetes.io/docs/concepts/overview/components/#control-plane-components","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"Kubernetes Control Plane"}]},{"type":"text","value":"\nis responsible for managing the Kubernetes cluster. It is the primary orchestrating component that ensures the cluster's desired state matches its actual state. The control plane makes global decisions about the cluster (such as scheduling), as well as detecting and responding to cluster events (such as starting up a new pod when a replica's field of a deployment is unsatisfied)."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The control plane consists of"}]},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"etcd"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"A key-value storage that Kubernetes uses to save all cluster data."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"kube-scheduler"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Decides on which node a Pod should be run on."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"kube-controller-manager"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Is responsible for and runs all of the controllers."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"kube-apiserver"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"This exposes the Kubernetes Control Plane through an API"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There's also cloud-controller-manager that lets you link your cluster into a cloud provider's API. If you wanted to build your own cluster on "},{"type":"element","tagName":"a","properties":{"href":"https://www.hetzner.com/cloud","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"Hetzner"}]},{"type":"text","value":", for example, you could use "},{"type":"element","tagName":"a","properties":{"href":"https://github.com/hetznercloud/hcloud-cloud-controller-manager","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"hcloud-cloud-controller-manager"}]},{"type":"text","value":" in your own cluster installed on their VMs."}]},{"type":"element","tagName":"h3","properties":{"id":"node-components","style":"position:relative;"},"children":[{"type":"text","value":"Node Components"},{"type":"element","tagName":"a","properties":{"href":"#node-components","ariaLabel":"node components permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Every node has a number of "},{"type":"element","tagName":"a","properties":{"href":"https://kubernetes.io/docs/concepts/overview/components/#node-components","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"components"}]},{"type":"text","value":" that maintain the running pods."}]},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"kubelet"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Makes sure containers are running in a Pod"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"kube-proxy"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"network proxy and maintains the network rules. Enables connections outside and inside of the cluster as well as Services to work as we've been using them."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Each node has also the "},{"type":"element","tagName":"a","properties":{"href":"https://kubernetes.io/docs/setup/production-environment/container-runtimes/","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"Container Runtime"}]},{"type":"text","value":". We have been using Docker as the runtime for this course."}]},{"type":"element","tagName":"img","properties":{"src":"/51120ad23b216a6946e3c4ebef2106bf/kube-diag.svg"},"children":[]},{"type":"element","tagName":"h3","properties":{"id":"addons","style":"position:relative;"},"children":[{"type":"text","value":"Addons"},{"type":"element","tagName":"a","properties":{"href":"#addons","ariaLabel":"addons permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In addition to all of the previously mentioned, Kubernetes has "},{"type":"element","tagName":"a","properties":{"href":"https://kubernetes.io/docs/concepts/cluster-administration/addons/","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"Addons"}]},{"type":"text","value":" that use the same Kubernetes resources we've been using and extend Kubernetes. You can view which resources the addons have created in the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"kube-system"}]},{"type":"text","value":" namespace."}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"console"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-console"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-console"]},"children":[{"type":"text","value":"$ kubectl -n kube-system get all\n  NAME                                                            READY   STATUS    RESTARTS   AGE\n  pod/event-exporter-v0.2.5-599d65f456-vh4st                      2/2     Running   0          5h42m\n  pod/fluentd-gcp-scaler-bfd6cf8dd-kmk2x                          1/1     Running   0          5h42m\n  pod/fluentd-gcp-v3.1.1-9sl8g                                    2/2     Running   0          5h41m\n  pod/fluentd-gcp-v3.1.1-9wpqh                                    2/2     Running   0          5h41m\n  pod/fluentd-gcp-v3.1.1-fr48m                                    2/2     Running   0          5h41m\n  pod/heapster-gke-9588c9855-pc4wr                                3/3     Running   0          5h41m\n  pod/kube-dns-5995c95f64-m7k4j                                   4/4     Running   0          5h41m\n  pod/kube-dns-5995c95f64-rrjpx                                   4/4     Running   0          5h42m\n  pod/kube-dns-autoscaler-8687c64fc-xv6p6                         1/1     Running   0          5h41m\n  pod/kube-proxy-gke-dwk-cluster-default-pool-700eba89-j735       1/1     Running   0          5h41m\n  pod/kube-proxy-gke-dwk-cluster-default-pool-700eba89-mlht       1/1     Running   0          5h41m\n  pod/kube-proxy-gke-dwk-cluster-default-pool-700eba89-xss7       1/1     Running   0          5h41m\n  pod/l7-default-backend-8f479dd9-jbv9l                           1/1     Running   0          5h42m\n  pod/metrics-server-v0.3.1-5c6fbf777-lz2zh                       2/2     Running   0          5h41m\n  pod/prometheus-to-sd-jw9rs                                      2/2     Running   0          5h41m\n  pod/prometheus-to-sd-qkxvd                                      2/2     Running   0          5h41m\n  pod/prometheus-to-sd-z4ssv                                      2/2     Running   0          5h41m\n  pod/stackdriver-metadata-agent-cluster-level-5d8cd7b6bf-rfd8d   2/2     Running   0          5h41m\n\n  NAME                           TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)         AGE\n  service/default-http-backend   NodePort    10.31.251.116   <none>        80:31581/TCP    5h42m\n  service/heapster               ClusterIP   10.31.247.145   <none>        80/TCP          5h42m\n  service/kube-dns               ClusterIP   10.31.240.10    <none>        53/UDP,53/TCP   5h42m\n  service/metrics-server         ClusterIP   10.31.249.74    <none>        443/TCP         5h42m\n\n  NAME                                      DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR                                                              AGE\n  daemonset.apps/fluentd-gcp-v3.1.1         3         3         3       3            3           beta.kubernetes.io/fluentd-ds-ready=true,beta.kubernetes.io/os=linux       5h42m\n  daemonset.apps/metadata-proxy-v0.1        0         0         0       0            0           beta.kubernetes.io/metadata-proxy-ready=true,beta.kubernetes.io/os=linux   5h42m\n  daemonset.apps/nvidia-gpu-device-plugin   0         0         0       0            0           <none>                                                                     5h42m\n  daemonset.apps/prometheus-to-sd           3         3         3       3            3           beta.kubernetes.io/os=linux                                                5h42m\n\n  NAME                                                       READY   UP-TO-DATE   AVAILABLE   AGE\n  deployment.apps/event-exporter-v0.2.5                      1/1     1            1           5h42m\n  deployment.apps/fluentd-gcp-scaler                         1/1     1            1           5h42m\n  deployment.apps/heapster-gke                               1/1     1            1           5h42m\n  deployment.apps/kube-dns                                   2/2     2            2           5h42m\n  deployment.apps/kube-dns-autoscaler                        1/1     1            1           5h42m\n  deployment.apps/l7-default-backend                         1/1     1            1           5h42m\n  deployment.apps/metrics-server-v0.3.1                      1/1     1            1           5h42m\n  deployment.apps/stackdriver-metadata-agent-cluster-level   1/1     1            1           5h42m\n\n  NAME                                                                  DESIRED   CURRENT   READY   AGE\n  replicaset.apps/event-exporter-v0.2.5-599d65f456                      1         1         1       5h42m\n  replicaset.apps/fluentd-gcp-scaler-bfd6cf8dd                          1         1         1       5h42m\n  replicaset.apps/heapster-gke-58bf4cb5f5                               0         0         0       5h42m\n  replicaset.apps/heapster-gke-9588c9855                                1         1         1       5h41m\n  replicaset.apps/kube-dns-5995c95f64                                   2         2         2       5h42m\n  replicaset.apps/kube-dns-autoscaler-8687c64fc                         1         1         1       5h42m\n  replicaset.apps/l7-default-backend-8f479dd9                           1         1         1       5h42m\n  replicaset.apps/metrics-server-v0.3.1-5c6fbf777                       1         1         1       5h41m\n  replicaset.apps/metrics-server-v0.3.1-8559697b9c                      0         0         0       5h42m\n  replicaset.apps/stackdriver-metadata-agent-cluster-level-5d8cd7b6bf   1         1         1       5h41m\n  replicaset.apps/stackdriver-metadata-agent-cluster-level-7bd5ddd849   0         0         0       5h42m"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To get a complete picture of how each part communicates with each other, read the article "},{"type":"element","tagName":"a","properties":{"href":"https://github.com/jamiehannaford/what-happens-when-k8s","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"what happens when k8s"}]},{"type":"text","value":" which explores what happens when you do "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"kubectl run nginx --image=nginx --replicas=3"}]},{"type":"text","value":" shedding some more light on the magic that happens behind the scenes."}]},{"type":"element","tagName":"h2","properties":{"id":"self-healing","style":"position:relative;"},"children":[{"type":"text","value":"Self-healing"},{"type":"element","tagName":"a","properties":{"href":"#self-healing","ariaLabel":"self healing permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Back in "},{"type":"element","tagName":"a","properties":{"href":"/part-1"},"children":[{"type":"text","value":"part 1"}]},{"type":"text","value":", we talked a little about the \"self-healing\" nature of Kubernetes and how pods can be deleted and they're automatically recreated."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's see what happens if we delete a node that has a pod in it. Let's first deploy the pod, a web application with ingress from part 1, confirm that it's running and then see which pod has it running."}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"console"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-console"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-console"]},"children":[{"type":"text","value":"$ kubectl apply -f https://raw.githubusercontent.com/kubernetes-hy/material-example/master/app2/manifests/deployment.yaml \\\n                -f https://raw.githubusercontent.com/kubernetes-hy/material-example/master/app2/manifests/ingress.yaml \\\n                -f https://raw.githubusercontent.com/kubernetes-hy/material-example/master/app2/manifests/service.yaml\n  deployment.apps/hashresponse-dep created\n  ingress.extensions/dwk-material-ingress created\n  service/hashresponse-svc created\n\n$ curl localhost:8081\n9eaxf3: 8k2deb\n\n$ kubectl describe po hashresponse-dep-57bcc888d7-5gkc9 | grep 'Node:'\n  Node:         k3d-k3s-default-agent-1/172.30.0.2"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this case it's in agent-1. Let's make the node go \"offline\" with pause:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"console"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-console"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-console"]},"children":[{"type":"text","value":"$ docker ps\n  CONTAINER ID        IMAGE                      COMMAND                  CREATED             STATUS              PORTS                                           NAMES\n  5c43fe0a936e        rancher/k3d-proxy:v3.0.0   \"/bin/sh -c nginx-pr…\"   10 days ago         Up 2 hours          0.0.0.0:8081->80/tcp, 0.0.0.0:50207->6443/tcp   k3d-k3s-default-serverlb\n  fea775395132        rancher/k3s:latest         \"/bin/k3s agent\"         10 days ago         Up 2 hours                                                          k3d-k3s-default-agent-1\n  70b68b040360        rancher/k3s:latest         \"/bin/k3s agent\"         10 days ago         Up 2 hours          0.0.0.0:8082->30080/tcp                         k3d-k3s-default-agent-0\n  28cc6cef76ee        rancher/k3s:latest         \"/bin/k3s server --t…\"   10 days ago         Up 2 hours                                                          k3d-k3s-default-server-0\n\n$ docker pause k3d-k3s-default-agent-1\nk3d-k3s-default-agent-1"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now wait for a while and this should be the new state:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"console"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-console"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-console"]},"children":[{"type":"text","value":"$ kubectl get po\nNAME                                READY   STATUS        RESTARTS   AGE\nhashresponse-dep-57bcc888d7-5gkc9   1/1     Terminating   0          15m\nhashresponse-dep-57bcc888d7-4klvg   1/1     Running       0          30s\n\n$ curl localhost:8081\n6xluh2: ta0ztp"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"What did just happen? Read "},{"type":"element","tagName":"a","properties":{"href":"https://dev.to/duske/how-kubernetes-handles-offline-nodes-53b5","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"this explanation on how kubernetes handles offline nodes"}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Well then, what happens if you delete the only control-plane node? Nothing good. In our local cluster it's our single point of failure. See Kubernetes documentation for \""},{"type":"element","tagName":"a","properties":{"href":"https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/ha-topology/","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"Options for Highly Available topology"}]},{"type":"text","value":"\" to avoid getting the whole cluster crippled by a single faulty hardware."}]}]},"html":"<div><text-box variant='learningObjectives' name='Learning Objectives'><p>After this section you</p><ul>\n<li>can explain in broad terms how Kubernetes operates</li>\n</ul></text-box><p>Instead of thinking about Kubernetes as something completely new I've found that comparing it to an operating system helps. I'm not an expert in operating systems but we've all used them.</p><p>Kubernetes is a layer on top of which we run our applications. It takes the resources that are accessible from the layers below and manages our applications and resources. It also provides services, such as the DNS, for the applications. With this OS mindset, we can also try to go the other way: You may have used a <a href=\"https://en.wikipedia.org/wiki/Cron\" target=\"_blank\" rel=\"noopener noreferrer\">cron</a> (or Windows' <a href=\"https://en.wikipedia.org/wiki/Windows_Task_Scheduler\" target=\"_blank\" rel=\"noopener noreferrer\">task scheduler</a>) for scheduling batch jobs such as saving backups of some applications. The same thing in Kubernetes can be done with <a href=\"https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/\" target=\"_blank\" rel=\"noopener noreferrer\">CronJobs</a>.</p><p>Now that we'll start talking about the internals we'll learn new insight on Kubernetes and will be able to prevent and solve problems that may result from its nature.</p><p>Since this section is mostly a reiteration of Kubernetes documentation, I will include various links to the official version of the documentation. Despite talking about internals, we shall not discuss how to set up our own Kubernetes cluster manually. If you want to get your hands dirty with a setup, you should read and complete <a href=\"https://github.com/kelseyhightower/kubernetes-the-hard-way\" target=\"_blank\" rel=\"noopener noreferrer\">Kubernetes the Hard Way</a> by Kelsey Hightower.</p><h3 id=\"controllers\" style=\"position:relative;\">Controllers<a href=\"#controllers\" aria-label=\"controllers permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3><p><a href=\"https://kubernetes.io/docs/concepts/architecture/controller/\" target=\"_blank\" rel=\"noopener noreferrer\">Controllers</a> watch the state of your cluster and then try to move the current state of the cluster closer to the desired state. When you declare X replicas of a Pod in your deployment.yaml, a controller called <a href=\"https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/\" target=\"_blank\" rel=\"noopener noreferrer\">Replication Controller</a> makes sure that will be true. There are a number of controllers for different responsibilities.</p><h3 id=\"kubernetes-control-plane\" style=\"position:relative;\">Kubernetes Control Plane<a href=\"#kubernetes-control-plane\" aria-label=\"kubernetes control plane permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3><p><a href=\"https://kubernetes.io/docs/concepts/overview/components/#control-plane-components\" target=\"_blank\" rel=\"noopener noreferrer\">Kubernetes Control Plane</a>\nis responsible for managing the Kubernetes cluster. It is the primary orchestrating component that ensures the cluster's desired state matches its actual state. The control plane makes global decisions about the cluster (such as scheduling), as well as detecting and responding to cluster events (such as starting up a new pod when a replica's field of a deployment is unsatisfied).</p><p>The control plane consists of</p><ul>\n<li>\n<p>etcd</p>\n<ul>\n<li>A key-value storage that Kubernetes uses to save all cluster data.</li>\n</ul>\n</li>\n<li>\n<p>kube-scheduler</p>\n<ul>\n<li>Decides on which node a Pod should be run on.</li>\n</ul>\n</li>\n<li>\n<p>kube-controller-manager</p>\n<ul>\n<li>Is responsible for and runs all of the controllers.</li>\n</ul>\n</li>\n<li>\n<p>kube-apiserver</p>\n<ul>\n<li>This exposes the Kubernetes Control Plane through an API</li>\n</ul>\n</li>\n</ul><p>There's also cloud-controller-manager that lets you link your cluster into a cloud provider's API. If you wanted to build your own cluster on <a href=\"https://www.hetzner.com/cloud\" target=\"_blank\" rel=\"noopener noreferrer\">Hetzner</a>, for example, you could use <a href=\"https://github.com/hetznercloud/hcloud-cloud-controller-manager\" target=\"_blank\" rel=\"noopener noreferrer\">hcloud-cloud-controller-manager</a> in your own cluster installed on their VMs.</p><h3 id=\"node-components\" style=\"position:relative;\">Node Components<a href=\"#node-components\" aria-label=\"node components permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3><p>Every node has a number of <a href=\"https://kubernetes.io/docs/concepts/overview/components/#node-components\" target=\"_blank\" rel=\"noopener noreferrer\">components</a> that maintain the running pods.</p><ul>\n<li>\n<p>kubelet</p>\n<ul>\n<li>Makes sure containers are running in a Pod</li>\n</ul>\n</li>\n<li>\n<p>kube-proxy</p>\n<ul>\n<li>network proxy and maintains the network rules. Enables connections outside and inside of the cluster as well as Services to work as we've been using them.</li>\n</ul>\n</li>\n</ul><p>Each node has also the <a href=\"https://kubernetes.io/docs/setup/production-environment/container-runtimes/\" target=\"_blank\" rel=\"noopener noreferrer\">Container Runtime</a>. We have been using Docker as the runtime for this course.</p><img src=\"/51120ad23b216a6946e3c4ebef2106bf/kube-diag.svg\"><h3 id=\"addons\" style=\"position:relative;\">Addons<a href=\"#addons\" aria-label=\"addons permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3><p>In addition to all of the previously mentioned, Kubernetes has <a href=\"https://kubernetes.io/docs/concepts/cluster-administration/addons/\" target=\"_blank\" rel=\"noopener noreferrer\">Addons</a> that use the same Kubernetes resources we've been using and extend Kubernetes. You can view which resources the addons have created in the <code class=\"language-text\">kube-system</code> namespace.</p><div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ kubectl -n kube-system get all\n  NAME                                                            READY   STATUS    RESTARTS   AGE\n  pod/event-exporter-v0.2.5-599d65f456-vh4st                      2/2     Running   0          5h42m\n  pod/fluentd-gcp-scaler-bfd6cf8dd-kmk2x                          1/1     Running   0          5h42m\n  pod/fluentd-gcp-v3.1.1-9sl8g                                    2/2     Running   0          5h41m\n  pod/fluentd-gcp-v3.1.1-9wpqh                                    2/2     Running   0          5h41m\n  pod/fluentd-gcp-v3.1.1-fr48m                                    2/2     Running   0          5h41m\n  pod/heapster-gke-9588c9855-pc4wr                                3/3     Running   0          5h41m\n  pod/kube-dns-5995c95f64-m7k4j                                   4/4     Running   0          5h41m\n  pod/kube-dns-5995c95f64-rrjpx                                   4/4     Running   0          5h42m\n  pod/kube-dns-autoscaler-8687c64fc-xv6p6                         1/1     Running   0          5h41m\n  pod/kube-proxy-gke-dwk-cluster-default-pool-700eba89-j735       1/1     Running   0          5h41m\n  pod/kube-proxy-gke-dwk-cluster-default-pool-700eba89-mlht       1/1     Running   0          5h41m\n  pod/kube-proxy-gke-dwk-cluster-default-pool-700eba89-xss7       1/1     Running   0          5h41m\n  pod/l7-default-backend-8f479dd9-jbv9l                           1/1     Running   0          5h42m\n  pod/metrics-server-v0.3.1-5c6fbf777-lz2zh                       2/2     Running   0          5h41m\n  pod/prometheus-to-sd-jw9rs                                      2/2     Running   0          5h41m\n  pod/prometheus-to-sd-qkxvd                                      2/2     Running   0          5h41m\n  pod/prometheus-to-sd-z4ssv                                      2/2     Running   0          5h41m\n  pod/stackdriver-metadata-agent-cluster-level-5d8cd7b6bf-rfd8d   2/2     Running   0          5h41m\n\n  NAME                           TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)         AGE\n  service/default-http-backend   NodePort    10.31.251.116   &lt;none&gt;        80:31581/TCP    5h42m\n  service/heapster               ClusterIP   10.31.247.145   &lt;none&gt;        80/TCP          5h42m\n  service/kube-dns               ClusterIP   10.31.240.10    &lt;none&gt;        53/UDP,53/TCP   5h42m\n  service/metrics-server         ClusterIP   10.31.249.74    &lt;none&gt;        443/TCP         5h42m\n\n  NAME                                      DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR                                                              AGE\n  daemonset.apps/fluentd-gcp-v3.1.1         3         3         3       3            3           beta.kubernetes.io/fluentd-ds-ready=true,beta.kubernetes.io/os=linux       5h42m\n  daemonset.apps/metadata-proxy-v0.1        0         0         0       0            0           beta.kubernetes.io/metadata-proxy-ready=true,beta.kubernetes.io/os=linux   5h42m\n  daemonset.apps/nvidia-gpu-device-plugin   0         0         0       0            0           &lt;none&gt;                                                                     5h42m\n  daemonset.apps/prometheus-to-sd           3         3         3       3            3           beta.kubernetes.io/os=linux                                                5h42m\n\n  NAME                                                       READY   UP-TO-DATE   AVAILABLE   AGE\n  deployment.apps/event-exporter-v0.2.5                      1/1     1            1           5h42m\n  deployment.apps/fluentd-gcp-scaler                         1/1     1            1           5h42m\n  deployment.apps/heapster-gke                               1/1     1            1           5h42m\n  deployment.apps/kube-dns                                   2/2     2            2           5h42m\n  deployment.apps/kube-dns-autoscaler                        1/1     1            1           5h42m\n  deployment.apps/l7-default-backend                         1/1     1            1           5h42m\n  deployment.apps/metrics-server-v0.3.1                      1/1     1            1           5h42m\n  deployment.apps/stackdriver-metadata-agent-cluster-level   1/1     1            1           5h42m\n\n  NAME                                                                  DESIRED   CURRENT   READY   AGE\n  replicaset.apps/event-exporter-v0.2.5-599d65f456                      1         1         1       5h42m\n  replicaset.apps/fluentd-gcp-scaler-bfd6cf8dd                          1         1         1       5h42m\n  replicaset.apps/heapster-gke-58bf4cb5f5                               0         0         0       5h42m\n  replicaset.apps/heapster-gke-9588c9855                                1         1         1       5h41m\n  replicaset.apps/kube-dns-5995c95f64                                   2         2         2       5h42m\n  replicaset.apps/kube-dns-autoscaler-8687c64fc                         1         1         1       5h42m\n  replicaset.apps/l7-default-backend-8f479dd9                           1         1         1       5h42m\n  replicaset.apps/metrics-server-v0.3.1-5c6fbf777                       1         1         1       5h41m\n  replicaset.apps/metrics-server-v0.3.1-8559697b9c                      0         0         0       5h42m\n  replicaset.apps/stackdriver-metadata-agent-cluster-level-5d8cd7b6bf   1         1         1       5h41m\n  replicaset.apps/stackdriver-metadata-agent-cluster-level-7bd5ddd849   0         0         0       5h42m</code></pre></div><p>To get a complete picture of how each part communicates with each other, read the article <a href=\"https://github.com/jamiehannaford/what-happens-when-k8s\" target=\"_blank\" rel=\"noopener noreferrer\">what happens when k8s</a> which explores what happens when you do <code class=\"language-text\">kubectl run nginx --image=nginx --replicas=3</code> shedding some more light on the magic that happens behind the scenes.</p><h2 id=\"self-healing\" style=\"position:relative;\">Self-healing<a href=\"#self-healing\" aria-label=\"self healing permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2><p>Back in <a href=\"/part-1\">part 1</a>, we talked a little about the \"self-healing\" nature of Kubernetes and how pods can be deleted and they're automatically recreated.</p><p>Let's see what happens if we delete a node that has a pod in it. Let's first deploy the pod, a web application with ingress from part 1, confirm that it's running and then see which pod has it running.</p><div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ kubectl apply -f https://raw.githubusercontent.com/kubernetes-hy/material-example/master/app2/manifests/deployment.yaml \\\n                -f https://raw.githubusercontent.com/kubernetes-hy/material-example/master/app2/manifests/ingress.yaml \\\n                -f https://raw.githubusercontent.com/kubernetes-hy/material-example/master/app2/manifests/service.yaml\n  deployment.apps/hashresponse-dep created\n  ingress.extensions/dwk-material-ingress created\n  service/hashresponse-svc created\n\n$ curl localhost:8081\n9eaxf3: 8k2deb\n\n$ kubectl describe po hashresponse-dep-57bcc888d7-5gkc9 | grep &#39;Node:&#39;\n  Node:         k3d-k3s-default-agent-1/172.30.0.2</code></pre></div><p>In this case it's in agent-1. Let's make the node go \"offline\" with pause:</p><div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ docker ps\n  CONTAINER ID        IMAGE                      COMMAND                  CREATED             STATUS              PORTS                                           NAMES\n  5c43fe0a936e        rancher/k3d-proxy:v3.0.0   &quot;/bin/sh -c nginx-pr…&quot;   10 days ago         Up 2 hours          0.0.0.0:8081-&gt;80/tcp, 0.0.0.0:50207-&gt;6443/tcp   k3d-k3s-default-serverlb\n  fea775395132        rancher/k3s:latest         &quot;/bin/k3s agent&quot;         10 days ago         Up 2 hours                                                          k3d-k3s-default-agent-1\n  70b68b040360        rancher/k3s:latest         &quot;/bin/k3s agent&quot;         10 days ago         Up 2 hours          0.0.0.0:8082-&gt;30080/tcp                         k3d-k3s-default-agent-0\n  28cc6cef76ee        rancher/k3s:latest         &quot;/bin/k3s server --t…&quot;   10 days ago         Up 2 hours                                                          k3d-k3s-default-server-0\n\n$ docker pause k3d-k3s-default-agent-1\nk3d-k3s-default-agent-1</code></pre></div><p>Now wait for a while and this should be the new state:</p><div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ kubectl get po\nNAME                                READY   STATUS        RESTARTS   AGE\nhashresponse-dep-57bcc888d7-5gkc9   1/1     Terminating   0          15m\nhashresponse-dep-57bcc888d7-4klvg   1/1     Running       0          30s\n\n$ curl localhost:8081\n6xluh2: ta0ztp</code></pre></div><p>What did just happen? Read <a href=\"https://dev.to/duske/how-kubernetes-handles-offline-nodes-53b5\" target=\"_blank\" rel=\"noopener noreferrer\">this explanation on how kubernetes handles offline nodes</a></p><p>Well then, what happens if you delete the only control-plane node? Nothing good. In our local cluster it's our single point of failure. See Kubernetes documentation for \"<a href=\"https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/ha-topology/\" target=\"_blank\" rel=\"noopener noreferrer\">Options for Highly Available topology</a>\" to avoid getting the whole cluster crippled by a single faulty hardware.</p></div>","frontmatter":{"path":"/part-5/1-kubernetes-internals","title":"Kubernetes Internals"},"fileAbsolutePath":"/home/runner/work/kubernetes-hy.github.io/kubernetes-hy.github.io/data/part-5/1-kubernetes-internals.md"},"allPages":{"edges":[{"node":{"id":"e4e5fe1c-25b1-57b3-87eb-e204e767a49c","frontmatter":{"path":"/faq","title":"FAQ"}}},{"node":{"id":"9f6e26aa-46a9-523d-96e4-a57c65ec083d","frontmatter":{"path":"/frontmatter-guide","title":"Frontmatter-guide"}}},{"node":{"id":"ecaa7011-87db-5ece-9b3c-1cfad638324a","frontmatter":{"path":"/","title":"Homepage"}}},{"node":{"id":"57c61ed7-37c4-5d0f-acd8-1dca0de6be4a","frontmatter":{"path":"/registration-and-completion","title":"Registration and Completion"}}},{"node":{"id":"fb4fb717-329a-5d49-94c3-183aa16507e2","frontmatter":{"path":"/unity-assignment","title":"Unity Assignment"}}},{"node":{"id":"dab4b6a7-96cf-5efe-83f4-f5199c283e65","frontmatter":{"path":"/part-0","title":"Part 0"}}},{"node":{"id":"8ecc11b1-3298-589e-b97a-2a3a36861b8d","frontmatter":{"path":"/sanasto","title":"Sanasto"}}},{"node":{"id":"3d7eac33-2990-59d1-a002-64e0b0f4f370","frontmatter":{"path":"/known-problems-solutions","title":"Issues you may face"}}},{"node":{"id":"78948204-39a7-5f81-b9f4-3029400d5f82","frontmatter":{"path":"/part-1/2-introduction-to-debugging","title":"Introduction to Debugging"}}},{"node":{"id":"0b237cfb-5f2a-5d8e-9aa0-0cf9b045db3a","frontmatter":{"path":"/part-1/5-summary","title":"Summary"}}},{"node":{"id":"19841be9-897c-577a-9f82-5a7381bc073c","frontmatter":{"path":"/part-2/1-networking-between-pods","title":"Networking between pods"}}},{"node":{"id":"fe4a80ee-85ba-536e-bbf5-c5695399f40f","frontmatter":{"path":"/part-1","title":"Part 1"}}},{"node":{"id":"f802a4ea-8d5a-503f-ad7b-d0138ab84c80","frontmatter":{"path":"/part-2/6-summary","title":"Summary"}}},{"node":{"id":"56f2a7a2-c9e2-5bbb-b6a7-76fd46592c69","frontmatter":{"path":"/part-2/5-monitoring","title":"Monitoring"}}},{"node":{"id":"b810e0d9-0ac2-5073-a9dc-4ffd6649b7f7","frontmatter":{"path":"/part-2","title":"Part 2"}}},{"node":{"id":"40440141-c1a8-5723-858a-eea86119b5b6","frontmatter":{"path":"/part-3/4-summary","title":"Summary"}}},{"node":{"id":"708df9d2-30d1-518f-8066-80109a75c4dc","frontmatter":{"path":"/part-3","title":"Part 3"}}},{"node":{"id":"47a288aa-ece4-5ba6-ab6e-cbc63dbdc752","frontmatter":{"path":"/part-4/4-summary","title":"Summary"}}},{"node":{"id":"c8b1eb5e-3c98-59b3-b6e9-6173791d7e34","frontmatter":{"path":"/part-4","title":"Part 4"}}},{"node":{"id":"471982cb-da12-5799-a6b2-fa8a3e67aa0d","frontmatter":{"path":"/part-5/4-beyond-kubernetes","title":"Beyond Kubernetes"}}},{"node":{"id":"7bebb01b-c990-5e7e-a9aa-d60f10ba63dd","frontmatter":{"path":"/part-5/5-summary","title":"Summary and end"}}},{"node":{"id":"cbd58376-8d52-5297-b38d-653179a1226f","frontmatter":{"path":"/part-5","title":"Part 5"}}},{"node":{"id":"fd6ebeaa-c808-5f11-9bdc-30e4f69b8a2a","frontmatter":{"path":"/part-1/4-introduction-to-storage","title":"Introduction to Storage"}}},{"node":{"id":"e4c53dca-867f-5293-9b28-657b695cd3f3","frontmatter":{"path":"/part-1/3-introduction-to-networking","title":"Introduction to Networking"}}},{"node":{"id":"9e4ff8d0-2e6c-5d55-83a0-16ada460096d","frontmatter":{"path":"/part-2/2-organizing-a-cluster","title":"Organizing a cluster"}}},{"node":{"id":"0353d158-f751-57fd-94ce-373924da1b05","frontmatter":{"path":"/part-2/3-configuring-applications","title":"Configuring applications"}}},{"node":{"id":"eae6660d-1d18-527a-bc1c-0f2f7ab54c6d","frontmatter":{"path":"/part-2/4-statefulsets-and-jobs","title":"StatefulSets and Jobs"}}},{"node":{"id":"e80b74e8-a23b-5d3c-808b-833a72ac739c","frontmatter":{"path":"/part-3/2-deployment-pipeline","title":"Deployment Pipeline"}}},{"node":{"id":"9f3c6f02-668a-517b-b7b6-1828f74c7200","frontmatter":{"path":"/part-3/1-introduction-to-gke","title":"Introduction to Google Kubernetes Engine"}}},{"node":{"id":"78f84327-bd7b-5b5d-941d-9fae8bca88d3","frontmatter":{"path":"/part-3/3-gke-features","title":"GKE features"}}},{"node":{"id":"0a2d8cfd-8e40-59a7-a688-e8bdc9fb9e3a","frontmatter":{"path":"/part-4/3-gitops","title":"GitOps"}}},{"node":{"id":"39fb03b7-2abe-515a-a543-b812fcbfdba5","frontmatter":{"path":"/part-5/1-kubernetes-internals","title":"Kubernetes Internals"}}},{"node":{"id":"8a2e40fa-1703-5755-aa66-ac69bf2e291d","frontmatter":{"path":"/part-5/3-service-mesh","title":"Service Mesh"}}},{"node":{"id":"a899eeb2-4329-5c9b-aadf-2fb803fa9142","frontmatter":{"path":"/part-5/2-custom-resource-definitions","title":"Custom Resource Definitions"}}},{"node":{"id":"da15a80e-5316-5986-afcf-75d521065017","frontmatter":{"path":"/part-1/1-first-deploy","title":"First Deploy"}}},{"node":{"id":"f5314214-d779-5fb4-a19f-ab7442f3fbb2","frontmatter":{"path":"/part-4/2-messaging-systems","title":"Messaging Systems"}}},{"node":{"id":"33c86b5c-3684-5006-b4e7-dbd0c7cc04bc","frontmatter":{"path":"/part-4/1-update-strategies-and-prometheus","title":"Update Strategies and Prometheus"}}}]}},"pageContext":{}},"staticQueryHashes":["3294351120","994120085"]}